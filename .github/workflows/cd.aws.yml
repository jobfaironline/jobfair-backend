# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
name: CD
on:
  push:
    branches: [ main ]
    
jobs:
   #Build's job
  build:
    #Depends on sonar's job
    name: Build
    #Run on Ubuntu using the latest version
#     runs-on: ubuntu-latest
    runs-on: self-hosted
    steps:
      #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - uses: actions/checkout@v1
      #Set up JDK 11
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      #Set up Maven cache
      - name: Cache Maven packages
        #This action allows caching dependencies and build outputs to improve workflow execution time.
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      #Build the application using Maven
      - name: Build with Maven
        run: mvn clean install
      - name: Create elastic beanstalk configuration file
        run: |
            mkdir -p .platform/nginx/conf.d/
            cd .platform/nginx/conf.d/
            touch proxy.conf
            echo 'client_max_body_size 50M;' >> proxy.conf
            echo 'proxy_ignore_client_abort on;' >> proxy.conf
      #Build the application using Maven
      - name: Create source bundle file
        run: | 
             mv target/jobfair-backend.jar .
             zip -r backend.zip .platform/ jobfair-backend.jar
      - name: Upload JAR
          #This uploads artifacts from your workflow allowing you to share data between jobs and store data once a workflow is complete.
        uses: actions/upload-artifact@v2
        with:
            #Set artifact name
            name: artifact
            #From this path
            path: backend.zip
          
  #Deploy's job
  deploy:
    #Depends on build's job
    needs: build
    name: Deploy
    #Run on Ubuntu using the latest version
#     runs-on: ubuntu-latest
    runs-on: self-hosted
    steps:
      - name: Download JAR
        #Download the artifact which was uploaded in the build's job
        uses: actions/download-artifact@v2
        with:
          name: artifact
      #Deploy the artifact (JAR) into AWS Beanstalk
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v20
        with:
         aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         application_name: job-fair-online-backend
         environment_name: Jobfaironlinebackend-env
         version_label: ${{github.SHA}}
         region: ap-southeast-1
         deployment_package: backend.zip
         use_existing_version_if_available: true
         wait_for_deployment: true
