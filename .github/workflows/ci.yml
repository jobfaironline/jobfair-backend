name: CI

on:
  pull_request:
    branches: [ main ]

jobs:   #Build's job
  CI:
    env:
      DATASOURCE_PASSWORD: ${{secrets.DATASOURCE_PASSWORD}}
      DATASOURCE_URL: ${{secrets.DATASOURCE_URL}}
      DATASOURCE_PORT: ${{secrets.DATASOURCE_PORT}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATASOURCE_USERNAME: ${{secrets.DATASOURCE_USERNAME}}
      JWT_EXPIRATION: ${{secrets.JWT_EXPIRATION}}
      JWT_REFESH_EXPIRATION: ${{secrets.JWT_REFESH_EXPIRATION}}
      JWT_SECRET: ${{secrets.JWT_SECRET}}
      SPRING_MAIL_HOST: ${{secrets.SPRING_MAIL_HOST}}
      SPRING_MAIL_PORT: ${{secrets.SPRING_MAIL_PORT}}
      SPRING_MAIL_SNMP_PORT: ${{secrets.SPRING_MAIL_SNMP_PORT}}
      SPRING_MAIL_PROPERTIES_MAIL_TRANSPORT_PROTOCOL: ${{secrets.SPRING_MAIL_PROPERTIES_MAIL_TRANSPORT_PROTOCOL}}
      SPRING_MAIL_USERNAME: ${{secrets.SPRING_MAIL_USERNAME}}
      SPRING_MAIL_PASSWORD: ${{secrets.SPRING_MAIL_PASSWORD}}
      MAIL_FROM: ${{secrets.MAIL_FROM}}
      SPRING_MAIL_SMTP_AUTH: ${{secrets.SPRING_MAIL_SMTP_AUTH}}
      SPRING_MAIL_SMTP_STARTTLS: ${{secrets.SPRING_MAIL_SMTP_STARTTLS}}
      SPRING_MAIL_SMTP_STARTTLS_REQIRED: ${{secrets.SPRING_MAIL_SMTP_STARTTLS_REQIRED}}
      API_DOMAIN: ${{secrets.API_DOMAIN}}
      API_PORT: ${{secrets.API_PORT}}
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_TEST_ACCESS_TOKEN_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_TEST_ACCESS_SECRET_KEY}}
      DB_DATABASE: ${{secrets.DATABASE_NAME}}
      DB_USER: ${{secrets.DATASOURCE_USERNAME}}
      DB_PASSWORD: ${{secrets.DATASOURCE_PASSWORD}} 
      JOB_HUB_AWS_SQS_URL: ${{secrets.JOB_HUB_AWS_SQS_URL}} 
      JOB_HUB_AWS_REGION: ${{secrets.AWS_REGION}} 
      AWS_REGION: ${{secrets.AWS_REGION}} 
      DB_OPTIONS: ${{secrets.DB_OPTIONS}}
    name: CI
    #Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    steps:
    #Create database
      - name: Get schema file
        uses: actions/checkout@v2
        with:
          repository: jobfaironline/schema
          token: ${{secrets.PAT}}
      - name: Create database
        run: |
             sudo /etc/init.d/mysql start
             cd DDL/
             for filename in $(ls -1 * | sort -n); do
              cat $filename >> schema.sql;
             done
             echo $DB_OPTIONS >> schema.sql
             mysql -h $DATASOURCE_URL -P $DATASOURCE_PORT -u $DATASOURCE_USERNAME -p$DATASOURCE_PASSWORD < schema.sql
             rm schema.sql
             cd ../DML/
             for filename in $(ls -1 * | sort -n); do
              cat $filename >> schema.sql;
             done
             mysql -h $DATASOURCE_URL -P $DATASOURCE_PORT -u $DATASOURCE_USERNAME -p$DATASOURCE_PASSWORD < schema.sql
             rm schema.sql
      #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - uses: actions/checkout@v1
      #Set up JDK 11
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      #Set up Maven cache
      - name: Cache Maven packages
        #This action allows caching dependencies and build outputs to improve workflow execution time.
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      #Build the application using Maven
      #This shit need a lot of time to start. That why I have to add "sleep 60" command to wait for this shit to start :D
      - name: Build and run file
        run: |
             mvn clean install
             cd target/
             nohup java -jar jobfair-backend.jar &       
             sleep 60
      - name: Verify app has successfully been loadded
        run: curl http://localhost:5000/swagger-ui/index.html
     #Test   
      - name: Run test
        uses: matt-ball/newman-action@master
        with:
          apiKey: ${{secrets.postmanApiKey}}
          collection: ${{secrets.POSTMAN_ACCOUNT_COLLECTION_ID}}
          environment: ${{secrets.POSTMAN_ENVIRONMENT_ID}}
  
